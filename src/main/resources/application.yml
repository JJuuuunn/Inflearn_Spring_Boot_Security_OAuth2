server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234

  # mustache ???? ????
  #  mvc:
  #    view:
  #      prefix: /templates/
  #      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: { Google API Id }
            client-secret: { Google API Secret Key }
            scope:
              - email
              - profile

          facebook:
            client-id: { Facebook API Id }
            client-secret: { Facebook API Secret Key }
            scope:
              - email
              - public_profile

          naver:
            client-id: { Naver API Id }
            client-secret: { Naver API Secret Key }
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver # 네이버는 기본 Provider 가 아니기 떄문에 설정
            scope:
              - email
              - name
#              - profile_image

        provider:
          naver: # 네어버 로그인 개발가이드
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 3.4.2 네이버 로그인 연동 URL 생성하기
            token-uri: https://nid.naver.com/oauth2.0/token # 3.4.4 접근 토큰 발급 요청
            user-info-uri: https://openapi.naver.com/v1/nid/me # 3.4.5 접근 토큰을 이용하여 프로필 API 호출하기
            user-name-attribute: response # 3.4.5 출력 결과 (회원 정보를 json으로 받는데 response 라는 키값으로 네이버가 리턴)
